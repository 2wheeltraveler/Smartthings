/**
 *  Toggle Garage Door
 *
 *  Copyright 2016 Darold Anderson
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 *
 */
definition(
    name: "Toggle Garage Door",
    namespace: "Darold",
    author: "Darold Anderson",
    description: "Use Virtual Switch to Activate Garage Door Opener",
    category: "My Apps",
    iconUrl: "http://cdn.device-icons.smartthings.com/Transportation/transportation12-icn.png",
    iconX2Url: "http://cdn.device-icons.smartthings.com/Transportation/transportation12-icn@2x.png",
    iconX3Url: "http://cdn.device-icons.smartthings.com/Transportation/transportation12-icn@2x.png")

preferences {
	section("When this button is pushed") {
		input "virtSwitch", "capability.momentary", title: "Momentary Switch", required: true
	}
    section("Control this garage door"){
		input "garageDoor","capability.garageDoorControl", title: "Garage Door", required: true
    }
   	section("paragraph") {
    	icon(required: false)
    }
}

def installed() {
    log.debug "Installed with settings: ${settings}"
    initialize()
}

def updated() {
    log.debug "Updated with settings: ${settings}"
    unsubscribe()
    initialize()
}

def initialize() {
	subscribe(virtSwitch, "momentary", doorHandler)
}

def doorHandler(evt) {
    log.debug "$evt.displayName was ${evt.value}"
	def garageDoorState = garageDoor.latestValue("door")
    log.debug "Door is currently ${garageDoorState}"
    
    if (garageDoorState == "closed") {
    	log.debug "Opening garage door"
        garageDoor.open()
	} else {
		if (garageDoorState == "open") {
    		log.debug "Closing garage door"
            garageDoor.close()
    	} else {
    		if (garageDoorState == "opening") {
            	log.debug "Door opening, no action taken"
            } else {
            	if (garageDoorState == "closing") {
            		log.debug "Door closing, no action taken"
            	} else {
                	log.debug "Unknown state received ${garageDoorState}"
                }
            }
       	}
	}
}
